{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabriel\\\\projetoprimeflix\\\\src\\\\pages\\\\Home\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport { Link } from 'react-router-dom';\nimport \"./home.css\";\n///movie/now_playing?api_key=6e33025d26226965852c36f5fcce3060&language=pt-BR\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [filmes, setFilmes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  //Sempre que abrir aplicação carregar o que tem no useEffect\n  useEffect(() => {\n    //função assíncrona para fazer busca na requisição da api\n    async function loadFilmes() {\n      const response = await api.get(\"movie/now_playing\", {\n        params: {\n          api_key: \"6e33025d26226965852c36f5fcce3060\",\n          language: \"pt-BR\",\n          page: 1\n        }\n      });\n      //entrando no response, e se aprofundando no que a api oferece, results é onde estão os filmes\n      //slice para reduzir o numero de filmes que aparecem, eram 20 e agora são 10\n      //console.log(response.data.results.slice(0,10));\n\n      setFilmes(response.data.results.slice(0, 12));\n      setLoading(false);\n    }\n    loadFilmes();\n  }, []);\n\n  //criando loading para carregar antes dos filmes aparecerem na pagina.\n  // chamando ele no setLoading mudando para falso sendo que foi criado no useState como true\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Carregando Filmes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lista-filmes\",\n      children: filmes.map(filme => {\n        return /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: filme.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://image.tmdb.org/t/p/original/${filme.poster_path}`,\n            alt: filme.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/filme/${filme.id}`,\n            children: \"Acessar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, filme.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"2Xkr7UAp1S2u68r/1TQ7uCjjQN8=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","api","Link","jsxDEV","_jsxDEV","Home","_s","filmes","setFilmes","loading","setLoading","loadFilmes","response","get","params","api_key","language","page","data","results","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","filme","title","src","poster_path","alt","to","id","_c","$RefreshReg$"],"sources":["C:/Users/Gabriel/projetoprimeflix/src/pages/Home/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport api from '../../services/api';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./home.css\";\r\n///movie/now_playing?api_key=6e33025d26226965852c36f5fcce3060&language=pt-BR\r\n\r\nfunction Home() {\r\n    const [filmes, setFilmes] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    //Sempre que abrir aplicação carregar o que tem no useEffect\r\n    useEffect(() => {\r\n\r\n        //função assíncrona para fazer busca na requisição da api\r\n        async function loadFilmes() {\r\n            const response = await api.get(\"movie/now_playing\", {\r\n                params: {\r\n                    api_key: \"6e33025d26226965852c36f5fcce3060\",\r\n                    language: \"pt-BR\",\r\n                    page: 1,\r\n                }\r\n            })\r\n            //entrando no response, e se aprofundando no que a api oferece, results é onde estão os filmes\r\n            //slice para reduzir o numero de filmes que aparecem, eram 20 e agora são 10\r\n            //console.log(response.data.results.slice(0,10));\r\n\r\n            setFilmes(response.data.results.slice(0, 12))\r\n            setLoading(false);\r\n        }\r\n\r\n        loadFilmes();\r\n\r\n\r\n    }, [])\r\n\r\n\r\n    //criando loading para carregar antes dos filmes aparecerem na pagina.\r\n    // chamando ele no setLoading mudando para falso sendo que foi criado no useState como true\r\n    \r\n\r\n    if (loading){\r\n        return (\r\n            <div className='loading'>\r\n                <h2>Carregando Filmes...</h2>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <div className='lista-filmes'>\r\n                {filmes.map((filme) => {\r\n                    return (\r\n                        <article key={filme.id}>\r\n                            <strong>{filme.title}</strong>\r\n                            <img src={`http://image.tmdb.org/t/p/original/${filme.poster_path}`} alt={filme.title} />\r\n                            <Link to={`/filme/${filme.id}`}>Acessar</Link>\r\n                        </article>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,oBAAoB;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,YAAY;AACnB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IAEZ;IACA,eAAeY,UAAUA,CAAA,EAAG;MACxB,MAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,mBAAmB,EAAE;QAChDC,MAAM,EAAE;UACJC,OAAO,EAAE,kCAAkC;UAC3CC,QAAQ,EAAE,OAAO;UACjBC,IAAI,EAAE;QACV;MACJ,CAAC,CAAC;MACF;MACA;MACA;;MAEAT,SAAS,CAACI,QAAQ,CAACM,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MAC7CV,UAAU,CAAC,KAAK,CAAC;IACrB;IAEAC,UAAU,CAAC,CAAC;EAGhB,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA;;EAGA,IAAIF,OAAO,EAAC;IACR,oBACIL,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,eACpBlB,OAAA;QAAAkB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAEd;EACA,oBACItB,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBlB,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBf,MAAM,CAACoB,GAAG,CAAEC,KAAK,IAAK;QACnB,oBACIxB,OAAA;UAAAkB,QAAA,gBACIlB,OAAA;YAAAkB,QAAA,EAASM,KAAK,CAACC;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,eAC9BtB,OAAA;YAAK0B,GAAG,EAAG,sCAAqCF,KAAK,CAACG,WAAY,EAAE;YAACC,GAAG,EAAEJ,KAAK,CAACC;UAAM;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzFtB,OAAA,CAACF,IAAI;YAAC+B,EAAE,EAAG,UAASL,KAAK,CAACM,EAAG,EAAE;YAAAZ,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,GAHpCE,KAAK,CAACM,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIb,CAAC;MAElB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAGd;AAACpB,EAAA,CA3DQD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AA6Db,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}